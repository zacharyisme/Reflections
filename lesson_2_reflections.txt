What happens when you initialize a repository? Why do you need to do it?
    When initialized a repository, it create a hidden folder called ".git".
    Because it can start to trace the change on the files and directories.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
    Staging area store the file that been added from working directory but not
    been commited to repository.

How can you use the staging area to make sure you have one commit per logical
change?
    I can use "git diff" to check if there have change between working area and staging area.
    Use "git diff --staged" to compare staging area with recently commit to check the change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
    When want to try out new feature for demo that not sure will work or new language version.
    By using branch, it won't break the master path of development.

How do the diagrams help you visualize the branch structure?


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
    Merge two branches will combind two branches commits into main branch and makes the commits traceable.
    Because represent in the diagram let us easy to know what codes are created before others.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?